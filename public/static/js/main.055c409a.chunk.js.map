{"version":3,"sources":["components/navigation/AppNavigation.js","components/picturecomponents/AppPicture.js","components/humcomponents/AppCardHum.js","components/textcomponents/AppCardText.js","components/filecomponents/AppCardFile.js","components/HomeView.js","serviceClient.js","components/humcomponents/NoMatch.js","components/humcomponents/HumResults.js","components/humcomponents/ErrorComponent.js","components/humcomponents/HumRecord.js","components/textcomponents/LyricBox.js","components/Latency.js","components/textcomponents/TextTest.js","components/Progress.js","components/filecomponents/FileTest.js","components/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["AppNavigation","react_default","a","createElement","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Item","react_router_dom","to","Component","AppPicture","Jumbotron","fluid","Container","AppCardHum","Card","style","width","Img","variant","src","Body","Title","Text","Button","AppCardText","AppCardFile","HomeView","picturecomponents_AppPicture","Row","Col","filecomponents_AppCardFile","humcomponents_AppCardHum","textcomponents_AppCardText","_callee","data","formData","options","res","jsonRes","regenerator_default","wrap","_context","prev","next","FormData","append","method","mode","mimeType","body","fetch","sent","json","success","abrupt","message","Error","t0","console","error","stop","NoMatch","props","HumResults","this","items","length","humcomponents_NoMatch","itemList","sort","item1","item2","score","map","item","index","key","Header","artist","dist_default","initialAnimation","percentage","text","concat","styles","path","stroke","spotifyResult","Image","imgUrl","thumbnail","albumName","releaseDate","Link","href","trackUrl","target","maxWidth","React","ErrorComponent","HumRecord","state","mediaRecorder","isSearching","results","onStart","_this","start","setState","logger","log","onStop","_this2","navigator","mediaDevices","blob","chunks","getUserMedia","audio","then","stream","MediaRecorder","mutableRecorder","onstop","e","Blob","type","_x","_postFile","apply","arguments","postFile","catch","ondataavailable","push","alert","md","onClick","humcomponents_ErrorComponent","humcomponents_HumResults","rec","LyricBox","context","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","open","aria-expanded","in","Latency","Spinner","animation","size","role","TextTest","url","loading","handleSubmit","bind","assertThisInitialized","preventDefault","field","refs","value","result","JSON","stringify","endresult","parse","encodeURI","headers","Content-Type","Accept","response","content","s","textcomponents_LyricBox","lyrics","Form","onSubmit","Group","controlId","Label","Control","placeholder","ref","components_Latency","Progress","ProgressBar","min","max","now","label","FileTest","progressTime","progressLabel","increaseProgress","increaseLabel","setInterval","src_components_Progress","PageNotFound","App","navigation_AppNavigation","react_router","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.055c409a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass AppNavigation extends Component {\r\n    render() {\r\n        return (\r\n          <Navbar bg=\"light\" expand=\"lg\">\r\n          <Navbar.Brand>Pitch A Song</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <NavDropdown title=\"Menu\" id=\"basic-nav-dropdown\">\r\n                <Nav.Item><Link to=\"/\">Home</Link></Nav.Item>\r\n                <Nav.Item><Link to=\"/filetest\">Test file</Link></Nav.Item>\r\n                <Nav.Item><Link to=\"/humrecord\">Test hum</Link></Nav.Item>\r\n                <Nav.Item><Link to=\"/texttest\">Test lyrics</Link></Nav.Item>\r\n                <Nav.Item>Sign up</Nav.Item>\r\n                <Nav.Item>Log in</Nav.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppNavigation;\r\n","import React, { Component } from 'react';\r\nimport { Jumbotron, Container } from 'react-bootstrap';\r\n\r\nclass AppPicture extends Component {\r\n    render() {\r\n        return (\r\n          <Jumbotron fluid>\r\n          <Container>\r\n            <h1>Test your song!</h1>\r\n            <p>\r\n              Do you feel that your song has already been written? Fear not my Friend! Test your song to gain certainty in your composing process.\r\n            </p>\r\n          </Container>\r\n        </Jumbotron> \r\n               \r\n  );\r\n}\r\n}\r\n\r\n\r\nexport default AppPicture;","import React, { Component } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass AppCardHum extends Component {\r\n    render() {\r\n        return (\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src=\"testpic.png\" />\r\n                <Card.Body>\r\n                    <Card.Title>Test by humming</Card.Title>\r\n                    <Card.Text>Test you song by humming and get matching results.</Card.Text>\r\n                    <Link to=\"/humrecord\">\r\n                        <Button variant=\"primary\">Test</Button>\r\n                    </Link>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppCardHum;\r\n","import React, { Component } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass AppCardText extends Component {\r\n    render() {\r\n        return (\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src=\"textpic.png\" />\r\n                <Card.Body>\r\n                    <Card.Title>Test your lyrics</Card.Title>\r\n                    <Card.Text>Test your song lyrics and get matching results.</Card.Text>\r\n                    <Link to=\"/texttest\">\r\n                        <Button variant=\"primary\">Test</Button>\r\n                    </Link>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppCardText;\r\n","import React, { Component } from 'react';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass AppCardFile extends Component {\r\n    render() {\r\n        return (\r\n            <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src=\"filepic.png\" />\r\n                <Card.Body>\r\n                    <Card.Title>Test audiofile</Card.Title>\r\n                    <Card.Text>Test your produced audiofile and get matching results.</Card.Text>\r\n                    <Link to=\"/filetest\">\r\n                        <Button variant=\"primary\">Test</Button>\r\n                    </Link>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppCardFile;\r\n","import React, { Component } from 'react';\r\nimport AppPicture from '../components/picturecomponents/AppPicture';\r\nimport AppCardHum from '../components/humcomponents/AppCardHum';\r\nimport AppCardText from '../components/textcomponents/AppCardText';\r\nimport AppCardFile from '../components/filecomponents/AppCardFile';\r\nimport AppVideo from '../components/picturecomponents/AppVideo';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nexport default class HomeView extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppPicture />\r\n                {/* <AppVideo /> */}\r\n                <Container>\r\n                    <Row>\r\n                        <Col><AppCardFile /></Col>\r\n                        <Col><AppCardHum /></Col>\r\n                        <Col><AppCardText /></Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// postFile returns { success:true, message: array} in successful cases (array is empty if no results)\r\n// postFile returns { success:false, message: error message} in unsuccessful cases\r\nexport async function postFile(data) {\r\n    const formData = new FormData();\r\n    formData.append('audiofile', data);\r\n    const options = {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        mimeType: 'multipart/form-data',\r\n        body: formData\r\n    };\r\n    try {\r\n        let res = await fetch('http://loppuprojekti-env.4wv6cxwtgr.eu-central-1.elasticbeanstalk.com/hum', options);\r\n        let jsonRes = await res.json();\r\n        if (jsonRes.success) {\r\n            return jsonRes.message;\r\n        } else {\r\n            throw new Error(jsonRes.message);\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw error;\r\n    }\r\n}","import React from 'react'\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst NoMatch = props => {\r\n    return (\r\n        <Card>\r\n            <Card.Title>No matches were found for your melody!</Card.Title>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default NoMatch;\r\n","import React from 'react';\r\nimport { Card, Image } from 'react-bootstrap';\r\nimport CircularProgressbar from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport './styles/HumResults.css';\r\nimport NoMatch from './NoMatch';\r\n\r\n// component gets an array of objects as a prop (props.items)\r\n// object composition = { score: int, artist: string, title: string, spotifyResult: false || Object }\r\n// spotifyResult: {performer: String, albumName: String, releaseDate: String, trackUrl: String, imgUrl: String }\r\n\r\nclass HumResults extends React.Component {\r\n    render() {\r\n        if (this.props.items.length === 0) {\r\n            return <NoMatch />;\r\n        }\r\n\r\n        let itemList = this.props.items\r\n            .sort((item1, item2) => item2.score - item1.score)\r\n            .map((item, index) => {\r\n                return (\r\n                    <Card className=\"text-center\" key={index}>\r\n                        <Card.Header>\r\n                            Matched <strong>{item.title}</strong> by {item.artist} &nbsp;\r\n                            <CircularProgressbar\r\n                                initialAnimation={true}\r\n                                percentage={item.score}\r\n                                text={`${item.score}%`}\r\n                                styles={{ path: { stroke: '#4cbc40' } }}\r\n                            />\r\n                        </Card.Header>\r\n                        {item.spotifyResult ? (\r\n                            <Card.Body>\r\n                                <Image src={item.spotifyResult.imgUrl || ''} thumbnail />\r\n                                <span> album: {item.spotifyResult.albumName || 'N/A'} </span>\r\n                                <span> released: {item.spotifyResult.releaseDate || 'N/A'} </span>\r\n                                <Card.Link href={item.spotifyResult.trackUrl} target=\"_blank\">\r\n                                    <Image style={{'maxWidth': '35px'}}src=\"Spotify_Icon.png\" />\r\n                                </Card.Link>\r\n                            </Card.Body>\r\n                        ) : (\r\n                            <Card.Body>No Spotify result</Card.Body>\r\n                        )}\r\n                    </Card>\r\n                );\r\n            });\r\n        return <div>{itemList}</div>;\r\n    }\r\n}\r\n\r\nexport default HumResults;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst ErrorComponent = props => {\r\n    return (\r\n        <Card>\r\n            <Card.Title>An error happened, please try again</Card.Title>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ErrorComponent;\r\n","import React from 'react';\r\nimport { postFile } from '../../serviceClient';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport './styles/HumRecord.css';\r\nimport HumResults from './HumResults';\r\nimport ErrorComponent from './ErrorComponent';\r\n\r\nexport default class HumRecord extends React.Component {\r\n    state = { mediaRecorder: null, isSearching: false, results: '', error: false };\r\n\r\n    componentDidMount() {\r\n        if (!navigator.mediaDevices) {\r\n            alert('getUserMedia not supported');\r\n            return;\r\n        }\r\n        let blob,\r\n            chunks = [];\r\n        navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\r\n            this.setState({ mediaRecorder: new MediaRecorder(stream) });\r\n            let mutableRecorder = this.state.mediaRecorder;\r\n            mutableRecorder.onstop = e => {\r\n                this.setState({ isSearching: true });\r\n                blob = new Blob(chunks, { type: 'audio/ogg; codecs=opus' });\r\n                chunks = [];\r\n                postFile(blob)\r\n                    .then(res => {\r\n                        this.setState({ results: res });\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState({ error: true });\r\n                    });\r\n            };\r\n            mutableRecorder.ondataavailable = e => {\r\n                chunks.push(e.data);\r\n            };\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({ mediaRecorder: null });\r\n    }\r\n\r\n    onStart = () => {\r\n        if (!this.state.mediaRecorder || this.state.mediaRecorder.state === 'recording') {\r\n            console.log('Mediarecorder is not defined or already recording');\r\n            return;\r\n        }\r\n        this.state.mediaRecorder.start();\r\n        this.setState({ results: '' });\r\n        logger(this.state.mediaRecorder);\r\n    };\r\n\r\n    onStop = () => {\r\n        if (!this.state.mediaRecorder || this.state.mediaRecorder.state === 'inactive') {\r\n            console.log('Mediarecorder is not defined or already inactive');\r\n            return;\r\n        }\r\n        this.state.mediaRecorder.stop();\r\n        logger(this.state.mediaRecorder);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col md={3} />\r\n                    <Col md={6}>\r\n                        <button className=\"round-button\" onClick={this.onStart}>\r\n                            <i className=\"fa fa-play fa-2x\" />\r\n                        </button>\r\n                        <button className=\"round-button\" onClick={this.onStop}>\r\n                            <i className=\"fa fa-stop fa-2x\" />\r\n                        </button>\r\n                    </Col>\r\n                    <Col md={3} />\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3} />\r\n                    <Col md={6}>{this.state.error ? <ErrorComponent /> : <div />}</Col>\r\n                    <Col md={3} />\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3} />\r\n                    <Col md={6}>{this.state.results ? <HumResults items={this.state.results} /> : <div />}</Col>\r\n                    <Col md={3} />\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst logger = rec => {\r\n    console.log('====== ' + rec.state + ' ======');\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Button, Collapse } from 'react-bootstrap';\r\n\r\nclass LyricBox extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { open } = this.state;\r\n        return (\r\n            <div>\r\n                <Button\r\n                    onClick={() => this.setState({ open: !open })}\r\n                    aria-controls=\"example-collapse-text\"\r\n                    aria-expanded={open}\r\n                >\r\n                    Get lyrics\r\n                </Button>\r\n                <Collapse in={this.state.open}>\r\n                    <div id=\"example-collapse-text\">\r\n                       {this.props.text} \r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LyricBox;","import React, { Component } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nclass Latency extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Spinner animation=\"border\" variant=\"primary\" size=\"lg\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Latency;\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, Card } from 'react-bootstrap';\r\nimport LyricBox from './LyricBox';\r\nimport Latency from '../Latency';\r\nimport './styles/TextTest.css';\r\n\r\nclass TextTest extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    state = { url: '/', data: [], open: false, loading: false }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({ loading: true, data: [] });\r\n\r\n        const formData = {};\r\n        for (const field in this.refs) {\r\n            formData[field] = this.refs[field].value;\r\n        }\r\n        var result = JSON.stringify(formData);\r\n        var endresult = JSON.parse(result);\r\n        var res = encodeURI(endresult.text);\r\n\r\n        var url = \"https://audd.p.rapidapi.com/findLyrics/?q=\" + res;\r\n        console.log(url);\r\n        var data = { url: url };\r\n\r\n        fetch(\"http://loppuprojekti-env.4wv6cxwtgr.eu-central-1.elasticbeanstalk.com/lyrics\",\r\n            {\r\n                mode: 'cors',\r\n                method: 'POST',\r\n                body: JSON.stringify(data), // data can be `string` or {object}!\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                console.log('Success:', response)\r\n                this.setState({ data: response.message.result, loading: false })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const content = this.state.data.map((s, index) =>\r\n            <div key={index}>\r\n                <Card>\r\n                    <Card.Header>Artist: {s.artist}</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Song title: {s.title}</Card.Title>\r\n                        <div>\r\n                            <LyricBox text={s.lyrics}/>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n\r\n        return (\r\n                <div>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group controlId=\"exampleForm.ControlTextarea1\" className=\"textfield\">\r\n                            <Form.Label>Write your lyrics</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"\" ref=\"text\" />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Test\r\n                    </Button>\r\n                    </Form>\r\n                    <br />\r\n                    { this.state.loading ? <Latency /> : '' }\r\n                    {content}\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TextTest;\r\n\r\n","import React, { Component } from 'react';\r\nimport { ProgressBar } from 'react-bootstrap';\r\nimport './Progress.css';\r\n\r\nclass Progress extends Component {\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <ProgressBar min={0} max={20} now={this.props.now} label={`${this.props.label}sec`} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Progress;","import React, { Component } from 'react';\r\nimport Latency from '../Latency';\r\nimport Progress from '../Progress';\r\n\r\n\r\nclass FileTest extends Component {\r\n\r\n    state = { progressTime: 0, progressLabel: 0 };\r\n\r\n    componentDidMount() {\r\n        setInterval(this.increaseProgress, 100)\r\n        setInterval(this.increaseLabel, 1000)\r\n    }\r\n\r\n    increaseProgress = () => {\r\n        this.setState({ progressTime: this.state.progressTime + 0.1 });\r\n    }\r\n\r\n    increaseLabel = () => {\r\n        this.setState({ progressLabel: this.state.progressLabel + 1 });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>File testausta</p>\r\n                <Latency />\r\n                <br />\r\n                <Progress now={this.state.progressTime} label={this.state.progressLabel} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileTest;","import React, { Component } from 'react';\r\n\r\nclass PageNotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>This page does not exist</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageNotFound;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport AppNavigation from './components/navigation/AppNavigation';\r\nimport HomeView from './components/HomeView';\r\nimport HumRecord from './components/humcomponents/HumRecord';\r\nimport TextTest from './components/textcomponents/TextTest';\r\nimport FileTest from './components/filecomponents/FileTest';\r\nimport PageNotFound from './components/PageNotFound';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Router>\r\n                    <AppNavigation />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={HomeView} />\r\n                        <Route exact path=\"/humrecord\" component={HumRecord} />\r\n                        <Route exact path=\"/texttest\" component={TextTest} />\r\n                        <Route exact path=\"/filetest\" component={FileTest} />\r\n                        <Route path=\"**\" component={PageNotFound} />\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}